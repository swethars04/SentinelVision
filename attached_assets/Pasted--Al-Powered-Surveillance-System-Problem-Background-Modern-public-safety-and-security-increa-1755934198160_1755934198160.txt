

Al Powered Surveillance System

Problem Background

Modern public safety and security increasingly rely on intelligent video surveillance systems. Environments such as parking lots, banks, and campuses requires continuous monitoring to detect suspicious activities and ensure safety. Traditional surveillance methods are labor-intensive and prone to human error, especially when monitoring multiple camera feeds. Recent advances in computer vision and machine learning enable automated detection of behavioral anomalies, such as loitering, unusual movements, or object abandonment, using pre-recorded or simulated CCTV footage.

The challenge is to build a system that leverages open-source video datasets or simulated inputs (no real cameras required) to automatically identify suspicious activities. This system should be robust enough to handle diverse environments and edge cases, improving the effectiveness and efficiency of security operations 

Key issues addressed include:

1. Automated Detection: Reducing reliance on manual monitoring by using Al-driven object and person detection.

2. Behavioral Analysis: Identifying complex anomalies such as loitering or object abandonment.

3.Scalability: Designing solutions suitable for various public environments.

4. Synthetic Data Generation: Addressing rare edge cases by generating synthetic video using GANS.

Objective

The objective is to develop an Al-powered surveillance system that detects behavioral anomalies in video feeds. The system should use C#/C++/Python and OpenCV, with YOLOV5 or similar models for object/person detection, and a machine learning model to flag suspicious activities. Alerts should be displayed in a simple dashboard with timestamps. As a bonus, participants may generate synthetic video data for rare scenarios using GANS.

Deliverables:

1. Develop an anomaly detection model: Use public video datasets to train and evaluate models for loitering, unusual movement, and object abandonment.

2.C#/C++/Python code implementation: Share the code in the provided template.

3.Dashboard for alerts: Create a dashboard that displays detected anomalies with timestamps (include screenshots).

4. Bonus: Generate synthetic video for edge cases using GANs.

Deliverables

1. Develop a predictive model: Detect behavioral anomalies using object/person detection and Al-ML models.

2.C#/C++/Python code: Implement the solution and share in the attached template.

3. Dashboard: Display alerts with timestamps; provide screenshots.

4.Bonus: Synthetic video generation for edge cases.

Addendum

Link to the data set: Avenue Dataset, UCSD Anomaly Detection Dataset (These are for reference only not mandatory to use the same)

Your output needs to be uploaded as pdf file(s) only, using the "Upload Files" option below.

You also need to provide an outline of your submission in the text box below. The outline should contain:

1. Proposed Solution (Describe your Idea/Solution/Prototype):

- Detailed explanation of the proposed solution

- How it addresses the problem 

- Innovation and uniqueness of the solution


2. Technical Approach:


- Technologies to be used (e.g. programming languages, frameworks, hardware)

 - Methodology and process for implementation (Flow Charts/Images/working prototype)

3. Feasibility and Viability:

- Analysis of the feasibility of the idea

- Potential challenges and risks

- Strategies for overcoming these challenges

4. Research and References:

- Details / Links of the reference and research work



I need a full coding related to the above problem statements and its constraints,output format and also it should be in website form and also more interactive too 
